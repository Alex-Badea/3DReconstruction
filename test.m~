addpath(genpath(fileparts(which(mfilename))))

im1 = imread('bst01.jpg');
im2 = imread('bst02.jpg');
im3 = imread('bst03.jpg');
kp1 = EstimateImageKeypoints(im1);
kp2 = EstimateImageKeypoints(im2);
kp3 = EstimateImageKeypoints(im3);
mc12 = EstimateKeypointCorrespondences(kp1,kp2);
mc23 = EstimateKeypointCorrespondences(kp2,kp3);

mc12n = [Dehomogenize(K\Homogenize(mc12(1:2,:))); 
    Dehomogenize(K\Homogenize(mc12(3:4,:)))];
[E1,Cmc12nin] = RANSAC(num2cell(mc12n,1), @EstimateEssentialMatrix, ...
    5, @SampsonDistance, 3e-5);
mc12nin = cell2mat(Cmc12nin);
mc12in = [Dehomogenize(K*Homogenize(mc12nin(1:2,:)));
    Dehomogenize(K*Homogenize(mc12nin(3:4,:)))];
Cmc12in = num2cell(mc12in,1);
disp(['Eroare rap. la adev. crt. INAINTE: ' num2str(sum(SummedEpipolarDistance...
    (K'\E1/K, Cmc12in))/length(Cmc12in))])

mc23n = [Dehomogenize(K\Homogenize(mc23(1:2,:))); 
    Dehomogenize(K\Homogenize(mc23(3:4,:)))];
[E2,Cmc23nin] = RANSAC(num2cell(mc23n,1), @EstimateEssentialMatrix, ...
    5, @SampsonDistance, 3e-5);
mc23nin = cell2mat(Cmc23nin);
mc23in = [Dehomogenize(K*Homogenize(mc23nin(1:2,:)));
    Dehomogenize(K*Homogenize(mc23nin(3:4,:)))];
Cmc23in = num2cell(mc23in,1);
disp(['Eroare rap. la adev. crt. INAINTE: ' num2str(sum(SummedEpipolarDistance...
    (K'\E2/K, Cmc23in))/length(Cmc23in))])
%% MINIM. EPIP. ERR.
P = EstimateRealPoseAndTriangulate(E1,mc12nin(1:2,:),mc12nin(3:4,:));
R = P(1:3,1:3);
r = rotationMatrixToVector(R)';
t = P(:,end);
f = @(x) sum(SummedEpipolarDistance(...
    Skew(x(:,2))*rotationVectorToMatrix(x(:,1)), Cmc12nin))/length(Cmc12nin);
o = optimoptions(@fminunc,'Display','none','MaxFunctionEvaluations',Inf,...
    'StepTolerance',1e-10);
rt = fminunc(f, [r t], o);
E1 = Skew(rt(:,2))*rotationVectorToMatrix(rt(:,1)); 

P = EstimateRealPoseAndTriangulate(E2,mc23nin(1:2,:),mc23nin(3:4,:));
R = P(1:3,1:3);
r = rotationMatrixToVector(R)';
t = P(:,end);
f = @(x) sum(SummedEpipolarDistance(... 
    Skew(x(:,2))*rotationVectorToMatrix(x(:,1)), Cmc23nin))/length(Cmc23nin);
o = optimoptions(@fminunc,'Display','none','MaxFunctionEvaluations',Inf,...
    'StepTolerance',1e-10);
rt = fminunc(f, [r t], o);
E2 = Skew(rt(:,2))*rotationVectorToMatrix(rt(:,1)); 

clear P R r t f o rt
%%
mc12in = [Dehomogenize(K*Homogenize(mc12nin(1:2,:))); 
    Dehomogenize(K*Homogenize(mc12nin(3:4,:)))];
%{
figure
PlotCorrespondences(im1,im2,mc12(1:2,:),mc12(3:4,:),...
    mc12in(1:2,:),mc12in(3:4,:));
%}
Cmc12in = num2cell(mc12in,1);
disp(['Eroare rap. la adev. crt.: ' num2str(sum(SummedEpipolarDistance(...
    K'\E1/K, Cmc12in))/length(Cmc12in))])

mc23in = [Dehomogenize(K*Homogenize(mc23nin(1:2,:))); 
    Dehomogenize(K*Homogenize(mc23nin(3:4,:)))];
%{
figure
PlotCorrespondences(im2,im3,mc23(1:2,:),mc23(3:4,:),...
    mc23in(1:2,:),mc23in(3:4,:));
%}
Cmc23in = num2cell(mc23in,1);
disp(['Eroare rap. la adev. crt.: ' num2str(sum(SummedEpipolarDistance(...
    K'\E2/K, Cmc23in))/length(Cmc23in))])
%% BA

%%
P1 = CANONICAL_POSE;
P2 = EstimateRealPoseAndTriangulate(E1,mc12nin(1:2,:),mc12nin(3:4,:));
P3 = EstimateRealPoseAndTriangulate(E2,mc23nin(1:2,:),mc23nin(3:4,:), P2);

CX = RectifyAndDenseTriangulate(K,